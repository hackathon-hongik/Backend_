# Generated by Django 5.0.7 on 2024-07-29 06:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('isbn', models.CharField(max_length=300, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128)),
                ('author', models.CharField(max_length=128)),
                ('date', models.DateTimeField(max_length=100)),
                ('publisher', models.CharField(max_length=128)),
                ('thumbnail', models.TextField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'books',
            },
        ),
        migrations.CreateModel(
            name='MyBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('reading', 'Reading'), ('read', 'Read'), ('wish', 'Wish')], default='wish', max_length=128)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.book')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member')),
            ],
        ),
        migrations.CreateModel(
            name='Desk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_count', models.PositiveIntegerField(default=0)),
                ('reading_count', models.PositiveIntegerField(default=0)),
                ('wish_count', models.PositiveIntegerField(default=0)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='members.member')),
                ('mybooks', models.ManyToManyField(to='books.mybook')),
            ],
            options={
                'db_table': 'desks',
            },
        ),
    ]
